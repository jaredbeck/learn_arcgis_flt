inherit_from: .rubocop_todo.yml

# Please:
#
# - Comment any deviations from the Ruby Style Guide
# - Alphabetize cops
# - Only include permanent config; temporary goes in .rubocop_todo.yml

Layout/AlignParameters:
  EnforcedStyle: with_fixed_indentation

Layout/DotPosition:
  EnforcedStyle: trailing

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

# Use exactly one space on each side of an operator. Do not align operators
# because it makes the code harder to edit, and makes lines unnecessarily long.
Layout/SpaceAroundOperators:
  AllowForAlignment: false

# Not a useful metric compared to, e.g. `AbcSize`.
Metrics/BlockLength:
  Enabled: false

# Not a useful metric compared to, e.g. `AbcSize`.
Metrics/ClassLength:
  Enabled: false

# The number of lines in a method is not a useful metric compared to `AbcSize`.
# It's common to have very long methods (> 50 lines) which are quite simple. For
# example, a method that returns a long string with only a few interpolations.
Metrics/MethodLength:
  Enabled: false

# Not a useful metric compared to, e.g. `AbcSize`.
Metrics/ModuleLength:
  Enabled: false

# It is a decades-old convention to use EOS as a heredoc delimiter. There is
# not enough value in changing this convention.
Naming/HeredocDelimiterNaming:
  Enabled: false

# In 0.50.0, this cop has a bug https://github.com/bbatsov/rubocop/issues/4732
Performance/HashEachMethods:
  Enabled: false

# Please use semantic style, e.g. `do` when there's a side-effect, else `{}`.
# The semantic style is too nuanced to lint, so the cop is disabled.
Style/BlockDelimiters:
  Enabled: false

# Use double negation wherever it would otherwise be impractical to convert
# a value to an actual boolean.
Style/DoubleNegation:
  Enabled: false

# The decision of when to use a guard clause to improve readability is subtle,
# and it's not clear that it can be linted. Certainly, the default
# `MinBodyLength` of 1 can actually hurt readability.
Style/GuardClause:
  Enabled: false
